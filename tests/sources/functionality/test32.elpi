% YES
% Test on func of outputs
pred twice i:prop.
twice X :- X; X.

func once prop ->.
once X :- X, !.

func do (func) ->.
do X :- X.

func map (func A -> B), list A -> list B.

pred give-fun o:(func).
give-fun (once (twice X)).
give-fun true.
give-fun (map (x\y\ once (twice y)) [] []).
give-fun (map F [] []) :- F = (x\y\ once (twice y)).

main.